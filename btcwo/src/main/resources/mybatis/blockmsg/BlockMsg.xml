<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.seg.kofo.bitcoinwo.dao.po.BlockMsgPo">
<resultMap id="BaseResultMap" type="io.seg.kofo.bitcoinwo.dao.po.BlockMsgPo">
    <result column="id" property="id"/>
    <result column="height" property="height"/>
    <result column="hash" property="hash"/>
    <result column="msg" property="msg"/>
    <result column="msg_type" property="msgType"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
</resultMap>

<sql id="Table_Name">
		block_msg
	</sql>

<sql id="Base_Column">
  id,
  height,
  hash,
  msg,
  msg_type,
  create_time,
  update_time
</sql>

<sql id="Base_Where">
   <trim suffixOverrides="AND">
      <if test="id != null">
        id= #{id}
        AND
     </if>
      <if test="height != null">
        height= #{height}
        AND
     </if>
      <if test="hash != null">
        hash= #{hash}
        AND
     </if>
      <if test="msg != null">
        msg= #{msg}
        AND
     </if>
      <if test="msgType != null">
        msg_type= #{msgType}
        AND
     </if>
      <if test="createTime != null">
        create_time= #{createTime}
        AND
     </if>
      <if test="updateTime != null">
        update_time= #{updateTime}
     </if>
   </trim>
</sql>

<sql id="Base_Select">
select
<include refid="Base_Column"/>
from
<include refid="Table_Name"/>
<where>
    <include refid="Base_Where"/>
</where>
</sql>


<insert id="insert">
insert into
<include refid="Table_Name"/>
<trim prefix="(" suffix=")" suffixOverrides=",">
   <if test="id != null">
       id,
   </if>
   <if test="height != null">
       height,
   </if>
   <if test="hash != null">
       hash,
   </if>
   <if test="msg != null">
       msg,
   </if>
   <if test="msgType != null">
       msg_type,
   </if>
   <if test="createTime != null">
       create_time,
   </if>
   <if test="updateTime != null">
       update_time,
   </if>
</trim>
<trim prefix="values (" suffix=")" suffixOverrides=",">
   <if test="id != null">
        #{id},
   </if>
   <if test="height != null">
        #{height},
   </if>
   <if test="hash != null">
        #{hash},
   </if>
   <if test="msg != null">
        #{msg},
   </if>
   <if test="msgType != null">
        #{msgType},
   </if>
   <if test="createTime != null">
        #{createTime},
   </if>
   <if test="updateTime != null">
        #{updateTime},
   </if>
</trim>
</insert>

<update id="update">
update
<include refid="Table_Name"/>
<set>
    <if test="height != null">
       height=#{height},
    </if>
    <if test="hash != null">
       hash=#{hash},
    </if>
    <if test="msg != null">
       msg=#{msg},
    </if>
    <if test="msgType != null">
       msg_type=#{msgType},
    </if>
    <if test="createTime != null">
       create_time=#{createTime},
    </if>
    <if test="updateTime != null">
       update_time=#{updateTime},
    </if>
</set>
where
        id = #{id}
</update>

<update id="updateByEntity">
UPDATE
<include refid="Table_Name"/>
<set>
    <if test="s.height != null">
       height=#{s.height},
    </if>
    <if test="s.hash != null">
       hash=#{s.hash},
    </if>
    <if test="s.msg != null">
       msg=#{s.msg},
    </if>
    <if test="s.msgType != null">
       msg_type=#{s.msgType},
    </if>
    <if test="s.createTime != null">
       create_time=#{s.createTime},
    </if>
    <if test="s.updateTime != null">
       update_time=#{s.updateTime},
    </if>
</set>
   <where>
     <trim prefix="(" suffix=")" suffixOverrides="AND">
        <if test="w.id != null">
            id=#{w.id}
            AND
       </if>
        <if test="w.height != null">
            height=#{w.height}
            AND
       </if>
        <if test="w.hash != null">
            hash=#{w.hash}
            AND
       </if>
        <if test="w.msg != null">
            msg=#{w.msg}
            AND
       </if>
        <if test="w.msgType != null">
            msg_type=#{w.msgType}
            AND
       </if>
        <if test="w.createTime != null">
            create_time=#{w.createTime}
            AND
       </if>
        <if test="w.updateTime != null">
            update_time=#{w.updateTime}
       </if>
     </trim>
   </where>
</update>

<delete id="delete">
delete from
<include refid="Table_Name"/>
<where>
    <include refid="Base_Where"/>
</where>
</delete>

<select id="count" parameterType="java.util.Map" resultType="int">
select count(1) from
<include refid="Table_Name"/>
<where>
    <include refid="Base_Where"/>
</where>
</select>

<select id="selectOne" resultMap="BaseResultMap">
<include refid="Base_Select"/>
</select>

<select id="selectList" resultMap="BaseResultMap">
 <include refid="Base_Select"/>
 <include refid="io.seg.framework.dao.common.Comm_Order_By"/>
</select>

<select id="selectForUpdate" resultMap="BaseResultMap" useCache="false">
<include refid="Base_Select"/>
for update
</select>

<insert id="batchInsert" parameterType="java.util.List">
insert into <include refid="Table_Name" />
<trim prefix="(" suffix=")" suffixOverrides=",">
    <include refid="Base_Column"/>
</trim>
values
<foreach collection="list" item="item" index="index" separator=",">
    <trim prefix="(" suffix=")" suffixOverrides=",">
     <choose>
       <when test="item.id == null">
         default,
      </when>
      <otherwise>
          #{item.id},
      </otherwise>
     </choose>
     <choose>
       <when test="item.height == null">
         default,
      </when>
      <otherwise>
          #{item.height},
      </otherwise>
     </choose>
     <choose>
       <when test="item.hash == null">
         default,
      </when>
      <otherwise>
          #{item.hash},
      </otherwise>
     </choose>
     <choose>
       <when test="item.msg == null">
         default,
      </when>
      <otherwise>
          #{item.msg},
      </otherwise>
     </choose>
     <choose>
       <when test="item.msgType == null">
         default,
      </when>
      <otherwise>
          #{item.msgType},
      </otherwise>
     </choose>
     <choose>
       <when test="item.createTime == null">
         default,
      </when>
      <otherwise>
          #{item.createTime},
      </otherwise>
     </choose>
     <choose>
       <when test="item.updateTime == null">
         default,
      </when>
      <otherwise>
          #{item.updateTime},
      </otherwise>
     </choose>
    </trim>
</foreach>
</insert>



</mapper>
